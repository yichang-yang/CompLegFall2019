# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# set working directory
# which should be the same for everyone
# assuming GitHub is in your "Documents" folder
setwd("~/GitHub/CompLegFall2019/data/canadaTextParsing/Ministries (CSV)/")
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "tidyverse", "tidyr", "dplyr", "plyr"), pkgTest)
##################################################
# make a dataset of ministers
##################################################
# read in data
martin <- read.csv("canada_commons_ministry_martin.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
harper <- read.csv("canada_commons_ministry_harper.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
# you will need to add the .csv for the most current legislative session
# ministry
martin$ministry <- "27th Ministry (Martin)"
harper$ministry <- "28th Ministry (Harper)"
# stack
dat <- rbind(martin, harper)
# choose variables
dat <- dat[,c(3, 4, 5, 6, 7, 10)]
# rename variables
names(dat) <- c("first_name", "last_name", "title", "start_date", "end_date", "ministry")
# clean dates
dat$start_year <- str_extract(dat$start_date, "[0-9]{4}")
dat$start_month <- str_extract(dat$start_date, "^[0-9]{1,2}")
dat$start_day <- str_extract(dat$start_date, "/[0-9]{1,2}/")
dat$start_day <- str_extract(dat$start_day, "[0-9]{1,2}")
dat$end_year <- str_extract(dat$end_date, "[0-9]{4}")
dat$end_month <- str_extract(dat$end_date, "^[0-9]{1,2}")
dat$end_day <- str_extract(dat$end_date, "/[0-9]{1,2}/")
dat$end_day <- str_extract(dat$end_date, "[0-9]{1,2}")
# pad
dat$start_month <- str_pad(dat$start_month, width = 2, side = "left", pad = "0")
dat$start_day <- str_pad(dat$start_day, width = 2, side = "left", pad = "0")
dat$end_month <- str_pad(dat$end_month, width = 2, side = "left", pad = "0")
dat$end_day <- str_pad(dat$end_day, width = 2, side = "left", pad = "0")
# dates
dat$start_date <- str_c(dat$start_year, dat$start_month, dat$start_day, sep = "-")
dat$end_date <- str_c(dat$end_year, dat$end_month, dat$end_day, sep = "-")
# fix characters
dat$first_name[13] <- "Stéphane"
dat$last_name[63:67] <- "Bélanger"
dat$title[20] <- "Federal Interlocutor for Métis and Non-Status Indians"
dat$title[191] <- "Federal Interlocutor for Métis and Non-Status Indians"
# full name
dat$full_name <- str_c(dat$first_name, dat$last_name, sep = " ")
# set working directory
setwd("~/Dropbox/Professional/Projects/Parliaments Project/Canada/Final Data (CSV)/")
# read in members data
members <- read.csv("canada_members.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
# remove government leader in the senate
dat <- filter(dat, title != "Leader of the Government in the Senate")
# select variables
dat <- select(dat, ministry, full_name, title, start_date, end_date)
# merge
dat <- left_join(dat, select(members, full_name, member_ID, last_name, constituency, party), by = "full_name")
# arrange
dat <- arrange(dat, ministry, member_ID)
# key_ID
dat$key_ID <- 1:nrow(dat)
# select variables
dat <- select(dat, key_ID, ministry, member_ID, last_name, constituency, party, title, start_date, end_date)
dat <- rename(dat, name = last_name)
# read file
write.csv(dat, "canada_ministries_final.csv", row.names = FALSE)
# set working directory
# which should be the same for everyone
# assuming GitHub is in your "Documents" folder
setwd("~/GitHub/CompLegFall2019/data/canadaTextParsing/Ministries (CSV)/")
getwd()
# set working directory
# which should be the same for everyone
# assuming GitHub is in your "Documents" folder
setwd("~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Ministries (CSV)/")
#######################
# set working directory
# load data
# and load libraries
#######################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# set working directory
# which should be the same for everyone
# assuming GitHub is in your "Documents" folder
setwd("~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Ministries (CSV)/")
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "tidyverse", "tidyr", "dplyr", "plyr"), pkgTest)
##################################################
# make a dataset of ministers
##############
# read in data
martin <- read.csv("canada_commons_ministry_martin.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
harper <- read.csv("canada_commons_ministry_harper.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
invisible(if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE))
}
detachAllPackages()
# set working directory
# which should be the same for everyone
# assuming GitHub is in your "Documents" folder
setwd("~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Ministries (CSV)/")
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "tidyverse", "tidyr", "dplyr", "plyr"), pkgTest)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# set working directory
# which should be the same for everyone
# assuming GitHub is in your "Documents" folder
setwd("~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Ministries (CSV)/")
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "tidyverse", "tidyr", "dplyr", "plyr"), pkgTest)
# read in data
martin <- read.csv("canada_commons_ministry_martin.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
harper <- read.csv("canada_commons_ministry_harper.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
# ministry
martin$ministry <- "27th Ministry (Martin)"
harper$ministry <- "28th Ministry (Harper)"
# stack
dat <- rbind(martin, harper)
# choose variables
dat <- dat[,c(3, 4, 5, 6, 7, 10)]
# rename variables
names(dat) <- c("first_name", "last_name", "title", "start_date", "end_date", "ministry")
# clean dates
dat$start_year <- str_extract(dat$start_date, "[0-9]{4}")
dat$start_month <- str_extract(dat$start_date, "^[0-9]{1,2}")
dat$start_day <- str_extract(dat$start_date, "/[0-9]{1,2}/")
dat$start_day <- str_extract(dat$start_day, "[0-9]{1,2}")
dat$end_year <- str_extract(dat$end_date, "[0-9]{4}")
dat$end_month <- str_extract(dat$end_date, "^[0-9]{1,2}")
dat$end_day <- str_extract(dat$end_date, "/[0-9]{1,2}/")
dat$end_day <- str_extract(dat$end_date, "[0-9]{1,2}")
allMinisters[,c(3, 4, 5, 6, 7, 10)]
# stack dataframes on top of eachother
# to create one large dataframe
allMinisters <- rbind(martin, harper)
allMinisters[,c(3, 4, 5, 6, 7, 10)]
names(allMinisters)
names(allMinisters)[c(3, 4, 5, 6, 7, 10)]
# read in data
# Tip: you almost always want to read stringsAsFactors=F in .csv
# because you want to often text as text, not factors
martin <- read.csv("canada_commons_ministry_martin.csv", stringsAsFactors = F, encoding = "UTF-8")
harper <- read.csv("canada_commons_ministry_harper.csv", stringsAsFactors = F, encoding = "UTF-8")
# create variable that distinguishes b/w ministries
martin$ministry <- "27th Ministry (Martin)"
harper$ministry <- "28th Ministry (Harper)"
# stack dataframes on top of eachother
# to create one large dataframe
allMinisters <- rbind(martin, harper)
# choose variables
# (1): First.Name
# (2): Last.Name
# (3): Title
# (4): Start.Date
# (5): End.Date
# (6): ministry
# Tip: check what exact names of variables are using
# function names(DF) allows you to see variables names for dataframe DF
variablesToSelect <- c("First.Name", "Last.Name", "Title", "Start.Date", "End.Date", "ministry")
allMinisters <- allMinisters[,variablesToSelect]
# rename variables
# typically don't want periods in your variables names
# keep standardization (i.e., "_" between)
names(allMinisters) <- c("firstName", "lastName", "title", "startDate", "endDate", "ministry")
View(allMinisters)
str_extract(allMinisters$start_date, "[0-9]{4}")
# clean dates (both start and end)
# (1): remove
allMinisters$start_year <- str_extract(allMinisters$start_date, "[0-9]{4}")
str_extract(allMinisters$startDate, "[0-9]{4}")
str_extract(allMinisters$startDate, "[0-9]{3}")
View(allMinisters)
str_extract(allMinisters$startDate, "^[0-9]{1,2}")
str_extract(allMinisters$startDate, "^[0-9]{1}")
str_extract(allMinisters$startDate, "^[0-9]{3}")
str_extract(allMinisters$startDate, "[0-9]{2}")
str_extract(allMinisters$startDate, "[0-9]{1}")
View(allMinisters)
str_extract(allMinisters$startDate, "[0-9]{3}")
str_extract(allMinisters$startDate, "[0-9]{4}")
str_extract(allMinisters$startDate, "^[0-9]{4}")
str_extract(allMinisters$startDate, "[0-9]")
trudeau <- read.csv("canada_commons_ministry_trudeau.csv", stringsAsFactors = F, encoding = "UTF-8")
View(trudeau)
View(martin)
View(trudeau)
