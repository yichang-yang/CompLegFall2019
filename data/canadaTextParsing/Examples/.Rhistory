summary(reg)
min(fitted(reg))
coefficients(reg)
coefficients(reg)[1] + coefficients(reg)[2]*min(cm$execs)
coefficients(reg)[1] + coefficients(reg)[2]*min(cm$execs)
min(fitted(reg))
coefficients(reg)[1] + coefficients(reg)[2]*min(cm$execs)
min(fitted(reg))
coefficients(reg)[1]
coefficients(reg)[2]*min(cm$execs)
min(fitted(reg))
coefficients(reg)[1] + coefficients(reg)[2]*0
library(tidyverse)
library(gapminder)
gapminder
ggplot() + geom_point(mapping = aes(x = 779, y = 28.8))
ggplot() + geom_point(mapping = aes( 779, 28.8))
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point()
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point() + geom_line()
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point() + geom_line(lm)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point() + geom_smooth()
ggplot(gapminder, aes(gdpPerap, lifeExp, color = continent)) + geom_point()
ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) + geom_point()
filter(gapminder, year == 2007)
filter(gapminder, year >= 1987)
filter(gapminder, year = 2007)
filter(gapminder, year == 2007 & gdpPercap <=10000)
filter(gapminder, counutry %in% c("Brazil","China","India"))
filter(gapminder, country %in% c("Brazil","China","India"))
mutate(gapminder, gdp = gdpPercap * pop)
gap_1 <- mutate(gapminder, gdp = gdpPercap * pop)
select(gap_1, gdp)
remove(list =ls)
remove(list =ls())
library(tidyverse)
library(gapminder)
arrange(gapminder, gdpPercap, country)
arrange(gapminder, gdpPercap)
arrange(gapminder, desc(gdpPercap))
group_by(gapminder, country)
group_by(gapminder, country) %>%
summarize(lifeExp)
group_by(gapminder, country) %>%
summarize(life = mean(lifeExp))
new_gap %>%
group_by(country)%>%
ggolot(aes(x = year, y = pop)) + geom_line()
new_gap <- filter(gapminder, country %in% c("Brazil", "China", "India"))
new_gap %>%
group_by(country)%>%
ggolot(aes(x = year, y = pop)) + geom_line()
new_gap %>%
group_by(country)%>%
ggplot(aes(x = year, y = pop)) + geom_line()
new_gap %>%
group_by(country)%>%
ggplot(aes(x = year, y = pop)) + geom_line(aes(color = country))
new_gap %>%
group_by(country)%>%
ggplot(aes(x = year, y = pop)) + geom_line(aes(group = country))
new_gap %>%
group_by(country)%>%
ggplot(aes(x = year, y = pop)) + geom_line(aes(color = country)) + geom_point(color = country, alpha = 0.5)
new_gap %>%
group_by(country)%>%
ggplot(aes(x = year, y = pop)) + geom_line(aes(color = country)) + geom_point(aes(color = country), alpha = 0.5)
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = mean_life, y = continent)) + geom_bar()
gap_2 <- filter(gapminder, year == 2007)
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = mean_life, y = continent)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = mean_life, y = continent)) + geom_histogram()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = mean_life, y = continent)) + geom_point()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = mean_life)) + geom_point()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = mean_life)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x =continent)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent)) + geom_histogram()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent)) + geom_point()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent)) + geom_contour()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(y = mean_life)) + geom_contour()
ggplot(aes(x = continent, y = mean_life)) + geom_bar( stat = 'identity)
ggplot(aes(x = continent, y = mean_life)) + geom_bar(stat = 'identity))
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent, y = mean_life)) + geom_bar(stat = 'identity'))
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent, y = mean_life)) + geom_bar(stat = 'identity')
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent, y = mean_life)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent, y = mean_life)) + geom_bar()
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent, y = mean_life)) + geom_bar(stat = 'identity')
gap_2 %>%
group_by(continent)%>%
summarize(mean_life = mean(lifeExp))%>%
ggplot(aes(x = continent, y = mean_life)) + geom_histogram(stat = 'identity')
remove(list=ls())
library('woolridge')
library('wooldridge')
data('wage1')
view(wage1)
wage1
reg1 <- lm(lwage ~ educ + exper + tenure, data = wage1)
knitr::opts_chunk$set(echo = TRUE)
remove(list=ls())
library('wooldridge')
data('wage1')
reg1 <- lm(lwage ~ educ + exper + tenure, data = wage1)
summary(reg1)
View(wage1)
reg2 <- lm(educ ~ exper + tenure, data = wage1)
summary(reg2)
mean(reg2)
reg2$residuals
reg2
summary(reg2)
reg2$residuals
reg2$residuals - wage1$educ
reg2$educ - wage1$educ
reg2$residuals
reg3 <- lm(lwage ~ reg2$residuals)
reg3 <- lm(lwage ~ reg2$residuals, data = wage1)
summary(reg3)
summary(reg3)
summary(reg1)
summary(reg2)
summary(reg1)
reg4 <- lm(lwage ~ exper + tenure, data = wage1)
reg4 <- lm(lwage ~ exper + tenure, data = wage1)
summary(reg4)
wage_res <- reg4$residuals
summary(reg4)
wage_res <- reg4$residuals
res <- reg2$residuals
lm(wage_res ~ res)
reg5 <- lm(wage_res ~ res)
summary(reg5)
library(ggplot2)
ggplot(aes(x = res, y = wage_res) + geom_point(position = "scatter")
ggplot(aes(x = res, y = wage_res) + geom_point(position = "scatter")
ggplot(aes(x = res, y = wage_res) + geom_point()
ggplot(aes(x = res, y = wage_res) + geom_point()
plot(x = res, y = wage_res)
ggplot(x = res, y = wage_res)
ggplot(aes(x = res, y = wage_res))
ggplot(x = res, y = wage_res)
plot(x = res, y = wage_res)
ggplot(x = res, y = wage_res) +geom_point()
ggplot(x = res, y = wage_res) + geom_point()
plot(res, wage_res, xlab = "$\hat r$", ylab = "\hat r^{wage}")
plot(res, wage_res)
summary(reg5)
plot(x = res, y = wage_res) + abline(-2.319e-17, 9.203e-02)
plot?
?plot
?plot
?plot(x = res, y = wage_res, color = "blue") + abline(-2.319e-17, 9.203e-02)
plot(x = res, y = wage_res, color = "blue") + abline(-2.319e-17, 9.203e-02)
plot(x = res, y = wage_res) + ?abline(-2.319e-17, 9.203e-02)
?abline
plot(x = res, y = wage_res) + ?abline(-2.319e-17, 9.203e-02, col = 'red')
plot(x = res, y = wage_res) + abline(a =-2.319e-17, b =9.203e-02, col = "red"")
plot(x = res, y = wage_res) + abline(a =-2.319e-17, b =9.203e-02, col = "red")
plot(x = res, y = wage_res) + abline(a =-2.319e-17, b =9.203e-02, col = "lightgray")
plot(x = res, y = wage_res) + abline(a =-2.319e-17, b =9.203e-02, col = "lightred")
plot(x = res, y = wage_res) + abline(a =-2.319e-17, b =9.203e-02, col = "red60")
plot(x = res, y = wage_res) + abline(a =-2.319e-17, b =9.203e-02, col = "blue")
data("meap93")
view(meap93)
head(meap93)
reg_meap <- lm(math10 ~ log(expend) + lnchpry, data = meap93)
reg_meap <- lm(math10 ~ log(expend) + lnchprg, data = meap93)
summary(reg_meap)
count(meap93)
nrow(meap93)
reg_simple <- lm(math10 ~ log(expend), data = meap93)
summary(reg_simple)
corr(log(meap93$expend), meap93$lnchprg)
cor(log(meap93$expend), meap93$lnchprg)
data('meapsingle')
reg_single <- lm(math4 ~ pctsgle, data = meapsingle )
summary(reg_single)
summary(reg_single)
data('meapsingle')
reg_single <- lm(math4 ~ pctsgle, data = meapsingle)
summary(reg_single)
reg_two <- lm(math4 ~ pctsgle + lmedinc + free, data = meapsingle)
summary(reg_two)
corr(log(medinc),free)
corr(log(meapsingle$medinc),meapsingle$free)
cor(log(meapsingle$medinc),meapsingle$free)
cor(1,1)
cor(log(meapsingle$medinc), meapsingle$free)
cor(log(meapsingle$medinc), meapsingle$free)
lm(pctsgle ~ lmedinc + free)
lm(pctsgle ~ lmedinc + free, data = meapsingle)
summary(lm(pctsgle ~ lmedinc + free, data = meapsingle))
summary(lm(free ~ pctsgle + free, data = meapsingle))
summary(lm(lmedinc ~ pctsgle + free, data = meapsingle))
summary(lm(free ~ pctsgle + lmedinc, data = meapsingle))
summary(lm(pctsgle ~ medinc + free, data = meapsingle))
summary(lm(free ~ pctsgle + medinc, data = meapsingle))
summary(lm(medinc ~ pctsgle + free, data = meapsingle))
summary(lm(lmedinc ~ pctsgle + free, data = meapsingle))
setwd("/Users/mark_alfie/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Divisions")
bd42 <- read.csv("42_breakdown.csv", encoding = "UTF-8", stringsAsFactors = FALSE)
bdelse<- read.csv("canada_divisions_breakdown.csv", encoding = "UTF-8", stringsAsFactors = FALSE)
View(bdelse)
View(bd42)
tail(bdelse)
View(bd42)
View(bd42)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276248))%>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
member_name = paste(FirstName, LastName, sep = " "), constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)
bd42
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276248))%>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
member_name = paste(FirstName, LastName, sep = " "), constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)
library(dplyr)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276248)) %>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
member_name = paste(FirstName, LastName, sep = " "), constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276247)) %>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
member_name = paste(FirstName, LastName, sep = " "), constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276247)) %>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
member_name = paste(bd42$FirstName, bd42$LastName, sep = " "), constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276247)) %>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)%>%
mutate(member_name = paste(bd42$FirstName, bd42$LastName, sep = " "))
View(bd42)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276247)) %>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)%>%
mutate(member_name = paste(bd42$FirstName, bd42$LastName, sep = " "))%>%
mutate(division_ID = paste0(parliament_ID, "-",session_ID, "-", division_number))
bd42 <- read.csv("42_breakdown.csv", encoding = "UTF-8", stringsAsFactors = FALSE)
bd42 <- bd42 %>%
mutate(key_ID = 585578:(585578+276247)) %>%
select(key_ID, parliament_ID = ParliamentNumber, session_ID = SessionNumber, division_number = DecisionDivisionNumber,
constituency = ConstituencyName, yea =Yea, nay =Nay, paired = Paired)%>%
mutate(member_name = paste(bd42$FirstName, bd42$LastName, sep = " "))%>%
mutate(division_ID = paste0(parliament_ID, "-",session_ID, "-", division_number))
bd42$date <- NULL
bd42$date <- NULL
bd42$date <- "a"
bd42$date <- NULL
bd_single <- read.csv("42division.csv", encoding = "UTF-8", stringsAsFactors = FALSE)
View(bd_single)
interm <- select(bd_single, division_ID, date)
library("tidyverse")
View(interm)
bd42 <- bd42 %>%
merge(bd42, interm, by = "division_ID")
bd42 <- bd42 %>%
merge(bd42, interm, by = division_ID)
bd42 <- bd42 %>%
merge(bd42, interm, by = 'division_ID')
library(tidyverse)
bd42 <- bd42 %>%
merge(bd42, interm)
bd42 <- bd42 %>%
merge(interm, by = "division_ID")
View(bd42)
bd42 <- bd42 %>%
merge(interm, by = "division_ID") %>%
bd42[, c(2,3,4,1,5,11,10,6,7,8,9)]
bd42 <- bd42 %>%
merge(interm, by = "division_ID") %>%
bd42 <- bd42[, c(2,3,4,1,5,11,10,6,7,8,9)]
bd42 <- bd42[, c(2,3,4,1,5,11,10,6,7,8,9)]
write_csv(bd42 , file = "42nd_breakdown.csv")
write.csv(bd42 , file = "42nd_breakdown.csv")
setwd("/Users/mark_alfie/Desktop/QTM\ 151")
ob <- read.csv("obesity-diabetes.csv")
library(tidyimpute)
library(tidyverse)
library(plotly)
library(ggmap)
library(maps)
library(mapdata)
library(mapdata)
library(tidyverse)
library("plotly")
library("ggmap")
library("maps")
library("mapdata")
install.packages("ggmap")
install.packages("mapdata")
library("ggmap")
library("maps")
library("mapdata")
setwd("/Users/mark_alfie/Desktop/QTM\ 151")
ob <- read.csv("obesity-diabetes.csv")
library(tidyimpute)
install.packages("tidyimpute")
gss_cat %>% impute(0, #imputaiton value
tvhours #colimn in which want to replace missing values
)
library("ggmap")
library("plotly")
library("tidyverse")
gss_cat %>% impute(0, #imputaiton value
tvhours #colimn in which want to replace missing values
)
library("mapdata")
library("maps")
library("ggmap")
install.packages("ggmap")
library("ggmap")
gss_cat %>% impute(0, #imputaiton value
tvhours #colimn in which want to replace missing values
)
?impute
?impute()
library(tidyimpute)
gss_cat %>% impute(0, #imputaiton value
tvhours #colimn in which want to replace missing values
)
ob <- read.csv("obesity-diabetes.csv")
gss_cat %>% impute(1, #imputaiton value
tvhours #colimn in which want to replace missing values
)
state.name
state.abb
country.name
timestamp()
##------ Fri Oct 25 10:28:38 2019 ------##
library("mapdata")
library("ggmap")
usa <- amp_data("usa")
library("maps")
usa <- amp_data("usa")
usa <- map_data("usa")
usa
knitr::opts_chunk$set(echo = TRUE)
usa <- map_data("usa")
usa
usa <- map_data("china")
usa
usa <- map_data("usa")
head(usa)
ggplot(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, order = order))
ggplot(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), color = "black", fill = "white")
ggmap(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), color = "black", fill = "white")
ggpot(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), color = "black", fill = "white")
ggplot(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), color = "black", fill = "white")
ggplot(usa, aes(x = long, y = lat)) +
geom_polygon(color = "black", fill = "white")
ggplot(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group),color = "black", fill = "white")
ggplot(usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group),color = "black", fill = "white")
ggplot(new_usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group),color = "black", fill = "white")
new_usa <- usa %>% arrange(long)
ggplot(new_usa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group),color = "black", fill = "white")
knitr::opts_chunk$set(echo = TRUE)
t_sta <- (sumreg$coefficients[3,1] - sumreg$coefficients[4,1]) / std.error
remove(list = ls())
library(wooldridge)
wage <- wooldridge::wage2
reg <- lm(lwage ~ educ + exper + tenure, data = wage)
(sumreg <- summary(reg))
(cov_err <- vcov(sumreg))
alpha_a <- 0.05
df <- sumreg$df[2]
std.error <- sqrt(cov_err[3,3] + cov_err[4,4] - 2 * cov_err[4,3])
t_sta <- (sumreg$coefficients[3,1] - sumreg$coefficients[4,1]) / std.error
#critical value
cv_a <- qt(alpha_a/2, df = df, lower.tail = FALSE)
(reject_b <- abs(cv_a) < abs(t_sta)) # failed to reject
#confidence interval
(upper_bound <- (sumreg$coefficients[3,1] - sumreg$coefficients[4,1]) + cv_a * std.error)
(lower_bound <- (sumreg$coefficients[3,1] - sumreg$coefficients[4,1]) - cv_a * std.error)
(reject_a <- (upper_bound > 0 & lower_bound < 0)) #failed to reject
t_sta
df
#confidence interval
(upper_bound <- (sumreg$coefficients[3,1] - sumreg$coefficients[4,1]) + cv_a * std.error)
(lower_bound <- (sumreg$coefficients[3,1] - sumreg$coefficients[4,1]) - cv_a * std.error)
#critical value
cv_a <- qt(alpha_a/2, df = df, lower.tail = FALSE)
cv_a
(pvalue <- pt(tstat, df = df, lower.tail = T))
alpha1 <- 0.01
df <- summary(reg_sub)$df[2]
df <- summary(reg_sub)$df[2]
cv <- qt(p = alpha1, df = df, lower.tail = TRUE)
(tstat <- (coef(summary(reg_sub))[3,1] - 1) / coef(summary(reg_sub))[3,2])
(reject1 <- (tstat < cv) ) #fail to reject the null hypothesis
(tstat <- (coef(summary(reg_sub))[3,1] - 1) / coef(summary(reg_sub))[3,2])
reg_sub <- lm(nettfa ~ inc + age, data = sub)
summary(reg_sub)
subs <- wooldridge::k401ksubs
sub <- subset(subs, fsize == 1)
nrow(sub)
reg_sub <- lm(nettfa ~ inc + age, data = sub)
summary(reg_sub)
reg_sub <- lm(nettfa ~ inc + age, data = sub)
summary(reg_sub)
alpha1 <- 0.01
df <- summary(reg_sub)$df[2]
cv <- qt(p = alpha1, df = df, lower.tail = TRUE)
(tstat <- (coef(summary(reg_sub))[3,1] - 1) / coef(summary(reg_sub))[3,2])
(reject1 <- (tstat < cv) ) #fail to reject the null hypothesis
(pvalue <- pt(tstat, df = df, lower.tail = T))
df
(pvalue <- pt(tstat, df = df, lower.tail = T))
cv <- qt(p = alpha1, df = df, lower.tail = TRUE)
cv
cor(sub$inc, sub$age)
setwd("/Users/mark_alfie/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Examples")
speech <-  read.csv(file = "canada_floor_speeches.csv", encoding ="UTF-8", stringsAsFactors = FALSE)
install.packages("quanteda")
library(quanteda)
View(speech)
View(speech)
stopwrads("en")
stopwords("en")
library(stringr)
speech <- speech %>%
select(person_name != NA)
speech <- speech %>%
select(speech$person_name != NA)
speech <-
select(speech, person_name != NA)
speech <- filter(speech, person_name != NA)
speech <- filter(speech, is.na = FALSE)
speech <- filter(speech, is.na = T)
speech <- filter(is.na = T)
?filter()
speech <- filter(speech$member_name, is.na = T)
speech <- filter(speech$member_name = NULL)
speech <- filter(speech$member_name == NULL)
speech <- filter(!is.na(speech$member_name))
speech <- filter(!is.na(speech$member_name))
speech <-  read.csv(file = "canada_floor_speeches.csv", encoding ="UTF-8", stringsAsFactors = FALSE)
speech <- filter(!is.na(speech$member_name))
speech %>% filter(!is.na(member_ID))
speech <- speech %>% filter(!is.na(member_ID))
speech
View(speech)
